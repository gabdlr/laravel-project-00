{"version":3,"sources":["components/layout/Header.js","context/notas/notesContext.js","components/notes/SendNote.js","components/notes/Note.js","components/notes/Notes.js","components/layout/Main.js","types/index.js","context/notas/notesReducer.js","config/axios.js","context/notas/NotesState.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","notesContext","createContext","SendNote","NotesContext","useContext","postNote","selectedNote","updateNote","modified","setModified","useState","title","content","note","setNote","id","updateNoteState","setUpdateNote","useEffect","handleChange","e","target","name","value","resetForm","onSubmit","preventDefault","document","getElementById","classList","add","setTimeout","remove","type","onChange","placeholder","cols","rows","onClick","Note","props","deleteNote","selectNote","role","parseInt","editNote","Notes","notes","getNotes","load","map","Main","GET_NOTES","POST_NOTE","UPDATE_NOTE","DELETE_NOTE","SELECT_NOTE","state","action","payload","errors","filter","axiosClient","axios","create","baseURL","NotesState","useReducer","notasReducer","dispatch","a","get","response","data","reverse","console","log","post","delete","put","Provider","children","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.88d1a08c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    return ( \r\n        <header className=\"py-3 container-fluid text-white text-center mt-3 bg-danger\">\r\n            <h1>React App Laravel's API Consumer</h1>\r\n        </header>\r\n     );\r\n}\r\n \r\nexport default Header;","import { createContext } from \"react\";\r\n\r\nconst notesContext = createContext();\r\n\r\nexport default notesContext;","import React,{ useState, useContext, useEffect } from 'react';\r\nimport notesContext from '../../context/notas/notesContext';\r\n\r\nconst SendNote = ( ) => {\r\n\r\n    //Usamos el context\r\n    const NotesContext = useContext(notesContext);\r\n    const { postNote, selectedNote, updateNote, modified, setModified } = NotesContext;\r\n    //State note\r\n    const [ note, setNote ] = useState({\r\n        title:\"\",\r\n        content: \"\"\r\n    });\r\n    //State updateNote\r\n    const [ updateNoteState, setUpdateNote ] = useState({\r\n        id: \"\",\r\n        title:\"\",\r\n        content: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        setNote({\r\n            title: selectedNote.title,\r\n            content: selectedNote.content\r\n        })\r\n        setUpdateNote({\r\n            id: selectedNote.id,\r\n            title: selectedNote.title,\r\n            content: selectedNote.content\r\n        }) \r\n    }, [selectedNote]);\r\n\r\n    \r\n    //Extract from state and function from provider\r\n\r\n    //Inputs handlers\r\n    const handleChange = e => {\r\n        setNote({\r\n            ...note,\r\n            [e.target.name]: e.target.value\r\n        })\r\n        setUpdateNote({\r\n            ...updateNoteState,\r\n            [e.target.name]: e.target.value\r\n        }) \r\n    }\r\n    \r\n    //Reset form\r\n    const resetForm = () => { \r\n        setNote({\r\n            title:\"\",\r\n            content:\"\"\r\n        });\r\n        setModified(false);\r\n    };\r\n\r\n\r\n    const submitForm = e => {\r\n        e.preventDefault();\r\n        //Surely not the best code\r\n        if( note.title === \"\" && note.content === \"\"){\r\n            document.getElementById('title').classList.add('form_error');\r\n            setTimeout(() => {\r\n                document.getElementById('title').classList.remove('form_error');\r\n            }, 1500);\r\n            document.getElementById('content').classList.add('form_error');\r\n            setTimeout(() => {\r\n                document.getElementById('content').classList.remove('form_error');\r\n            }, 1500);\r\n            return;            \r\n        }\r\n        if (note.title === \"\"){\r\n            document.getElementById('title').classList.add('form_error');\r\n            setTimeout(() => {\r\n                document.getElementById('title').classList.remove('form_error');\r\n            }, 1500);\r\n            return;\r\n        }\r\n        if(note.content === \"\"){\r\n            document.getElementById('content').classList.add('form_error');\r\n            setTimeout(() => {\r\n                document.getElementById('content').classList.remove('form_error');\r\n            }, 1500);\r\n            return;            \r\n        }\r\n        if(selectedNote.id !== \"\"){\r\n            updateNote(updateNoteState)\r\n        } else {\r\n            postNote(note);\r\n        }\r\n        resetForm();\r\n    }\r\n    //Extract note values\r\n    const { title, content } = note;\r\n\r\n    return (\r\n        <form\r\n        id=\"note-form\"\r\n        onSubmit={submitForm}\r\n        >\r\n            <div className=\"form-group\">\r\n                <input\r\n                    id=\"title\" \r\n                    type=\"text\" \r\n                    className=\"form-control mt-3 mb-2\" \r\n                    name=\"title\"\r\n                    value={title} \r\n                    onChange={handleChange}\r\n                    placeholder=\"Write a title...\" \r\n                />\r\n                <textarea \r\n                    className=\"form-control\"\r\n                    name=\"content\"\r\n                    value={content}\r\n                    onChange={handleChange} \r\n                    id=\"content\" \r\n                    cols=\"30\" \r\n                    rows=\"4\"\r\n                    placeholder=\"Content of your note\"\r\n                ></textarea>\r\n                <div className=\"d-flex justify-content-end mt-2\">\r\n                    <button \r\n                    className=\"btn btn-lg px-5 bg-danger text-white mr-2\"\r\n                    onClick= {resetForm}\r\n                    >\r\n                    Reset\r\n                    </button>\r\n                    <button \r\n                    className=\"btn btn-lg px-5 bg-success text-white\"\r\n                    type=\"submit\"\r\n                    >\r\n                      { ( modified ? \"Modify\" : \"Send\")}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form> \r\n     );\r\n     \r\n}\r\n \r\nexport default SendNote;","import React, { useContext } from 'react';\r\nimport notesContext from '../../context/notas/notesContext';\r\n\r\nconst Note = (props) => {\r\n    const {id, title, content } = props;\r\n\r\n    // Extraer proyectos de state inicial\r\n    const NotesContext = useContext(notesContext);\r\n    const { deleteNote, selectNote, setModified } = NotesContext;\r\n    const deleteSelected = e => {\r\n        deleteNote(parseInt(e.target.id));\r\n    }\r\n    const editNote = (id) => {\r\n        selectNote(parseInt(id));\r\n        setModified(true);\r\n    }\r\n    \r\n    return ( \r\n        <div className=\"alert alert-warning py-3 no-gutters\" role=\"alert\">\r\n            <div className=\"row\">\r\n                <div className=\"col-10 d-block\">\r\n                    <h4 className=\"\">{title}</h4>\r\n                </div>\r\n                <div className=\"col-2 justify-content-end d-flex \">\r\n                    <div className=\"mr-2 close\">\r\n                    <i \r\n                        className=\"bi bi-pencil-square\"\r\n                        id={id}\r\n                        onClick={ (e) => editNote(e.target.id)}>\r\n                    </i>\r\n                    </div>\r\n                    <div className=\"close\">\r\n                    <i \r\n                    className=\"bi bi-x-square\" \r\n                    id={id}\r\n                    onClick={ deleteSelected }\r\n                    ></i>\r\n                    </div>\r\n                </div> \r\n            </div>\r\n            <hr className=\"mt-0\"/> \r\n            {content}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Note;","import React,{ useContext, useEffect } from 'react';\r\nimport notesContext from '../../context/notas/notesContext';\r\nimport Note from './Note';\r\n\r\nconst Notes = () => {\r\n    //Extract notes\r\n    // Extraer proyectos de state inicial\r\n    const NotesContext = useContext(notesContext);\r\n    const { notes, getNotes, load  } = NotesContext;\r\n\r\n    useEffect(() => {\r\n        if(load) {\r\n            getNotes()\r\n        }\r\n    }, []);\r\n\r\n    return (notes) ? \r\n    (     \r\n        notes.map(note =>\r\n            <Note\r\n            key={note.id}\r\n            id={note.id}\r\n            title={note.title}\r\n            content={note.content}\r\n            /> ) \r\n    ) : null ;\r\n}\r\n\r\n \r\nexport default Notes;","import React from 'react';\r\nimport SendNote from '../notes/SendNote';\r\nimport Notes from '../notes/Notes';\r\nconst Main = () => {\r\n    return ( \r\n        <div className=\"container\">\r\n            <SendNote/>\r\n            <Notes/>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Main;\r\n","//Notes\r\nexport const GET_NOTES = 'GET_NOTES';\r\nexport const POST_NOTE = 'POST_NOTE';\r\nexport const UPDATE_NOTE = 'UPDATE_NOTE';\r\nexport const DELETE_NOTE = 'DELETE_NOTE';\r\nexport const LOADED = 'LOADED';\r\nexport const SELECT_NOTE = 'SELECT_NOTE';\r\n\r\n","import { POST_NOTE,\r\n        UPDATE_NOTE,\r\n        DELETE_NOTE,\r\n        GET_NOTES,\r\n        SELECT_NOTE\r\n         } from \"../../types/index\";\r\n\r\nexport default (state, action) => {\r\n\r\n    switch(action.type){\r\n        case GET_NOTES:\r\n            return {\r\n                ...state,\r\n                notes: action.payload,\r\n                errors: null,\r\n                load: false\r\n            }\r\n        case SELECT_NOTE:\r\n            return{\r\n                ...state,\r\n                selectedNote: (state.notes.filter(note => note.id === action.payload)[0])\r\n            }    \r\n        case POST_NOTE:\r\n            return {\r\n                ...state,\r\n                notes: [action.payload, ...state.notes,],\r\n                errors: null\r\n            }\r\n        case UPDATE_NOTE:\r\n            return{\r\n                ...state,\r\n                notes: state.notes.map(note => note.id === action.payload.id ? action.payload : note)\r\n            }\r\n        case DELETE_NOTE:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.filter(note => note.id !== action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst axiosClient = axios.create({\r\n    baseURL: \"https://gabtestlaravelapp.herokuapp.com/api/\"\r\n}\r\n);\r\n\r\nexport default axiosClient;","import React, { useReducer, useState } from 'react';\r\nimport notesContext from './notesContext';\r\nimport notasReducer from './notesReducer';\r\n\r\nimport { GET_NOTES,\r\n        POST_NOTE,\r\n        UPDATE_NOTE,\r\n        DELETE_NOTE,\r\n        SELECT_NOTE\r\n         } from \"../../types/index\";\r\nimport axiosClient from '../../config/axios';\r\n\r\nconst NotesState = (props) => {\r\n    const initialState = {\r\n        notes: [],\r\n        errors: null,\r\n        load: true,\r\n        selectedNote: {\r\n            id:\"\",\r\n            title:\"\",\r\n            content:\"\"\r\n        }\r\n    }\r\n\r\n    //State modified (flag)\r\n    const [ modified, setModified ] = useState(false);\r\n\r\n    const [ state, dispatch ] = useReducer( notasReducer, initialState);\r\n\r\n    //Functions\r\n\r\n    //Get notes\r\n    const getNotes = async () => {\r\n        try {\r\n            const response = await axiosClient.get(\"/notes\"); \r\n            dispatch({\r\n                type: GET_NOTES,\r\n                //Again, definitely not clean code\r\n                payload: (response.data).reverse(),\r\n                load: false\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    //Post note (create a new note)\r\n    const postNote = async (note) => {\r\n        try {\r\n            const response = await axiosClient.post('/notes', note)\r\n            dispatch({\r\n                type: POST_NOTE,\r\n                payload: response.data\r\n            });\r\n        } catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    //Delete note\r\n    const deleteNote = async (id) => {\r\n        try {\r\n            await axiosClient.delete(`/notes/${id}`);\r\n            dispatch({\r\n                type: DELETE_NOTE,\r\n                payload: id\r\n            });\r\n            \r\n        } catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    //Select note\r\n    const selectNote = (id) => {\r\n        dispatch({\r\n            type: SELECT_NOTE,\r\n            payload: id\r\n        }) \r\n    }\r\n\r\n    //Update note\r\n    const updateNote = async (selectedNote) => {\r\n        try {\r\n            await axiosClient.put(`/notes/${selectedNote.id}`, selectedNote);\r\n            dispatch({\r\n                type: UPDATE_NOTE,\r\n                payload: selectedNote\r\n            });\r\n        } catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <notesContext.Provider\r\n        value={{\r\n            //Data\r\n            notes: state.notes,\r\n            errors: state.errors,\r\n            load: state.load,\r\n            selectedNote: state.selectedNote,\r\n            modified: modified,\r\n            //Functions\r\n            postNote: postNote,\r\n            getNotes: getNotes,\r\n            deleteNote: deleteNote,\r\n            selectNote: selectNote,\r\n            updateNote: updateNote,\r\n            setModified: setModified\r\n        }}>\r\n            {props.children}\r\n        </notesContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport default NotesState;","import Header from \"./components/layout/Header\";\nimport Main from \"./components/layout/Main\";\nimport \"./App.css\";\n//States\nimport NotesState from \"./context/notas/NotesState\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NotesState>\n        <Header/>\n        <Main/>\n      </NotesState>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}